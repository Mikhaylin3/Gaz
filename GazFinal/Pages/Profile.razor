@page "/profile"
@using GazFinal.Data;
@inject NavigationManager nav;
@inject Mongich ser;

<h3>Your Profile</h3>
<p><label>Name:</label></p>
<p><input type="text" @bind-value="Name"/></p>
<p><label>Login:</label></p>
<p><input type="text" @bind-value="Login"/></p>
@if (ErrorInputLogin)
{
    <p><label style="color: red;font-weight: 500;">Такой логин уже существует!!!</label></p>
}
<p><label>Password:</label></p>
<p><input type="password" @bind-value="Password"></p>
<p><label>Phone:</label></p>
<p><input type="text" maxlength="12" @bind-value="Phone"></p>
<p><label>Email:</label></p>
<p><input type="text" maxlength="12" @bind-value="Email"></p>
@if (ErrorEmail)
{
    <p><label style="color: red;font-weight: 500;">Такая почта уже существует!!!</label></p>
}
@if (user.GetType().Name == "Developer")
{
    <p><label>INN:</label></p>
    <p><input type="text" maxlength="12" @bind-value=INN /></p>
    <p><label>KPP:</label></p>
    <p><input type="text" maxlength="12" @bind-value=KPP /></p>
    <p><label>OGNR:</label></p>
    <p><input type="text" maxlength="12" @bind-value=OGNR /></p>
    <p><label>Adress:</label></p>
    <p><input type="text" @bind-value=Address /></p>
    <p><button type="button" @onclick="Projecting">Create Project</button></p>
}
@if (user.GetType().Name == "Desingner")
{
    <p><label>Full Name:</label></p>
    <p><input type="text" @bind-value=FullName/></p>
    <p><label>Department:</label></p>
    <p><input type="text" @bind-value=Departament /></p>
    <p><button type="button" @onclick="Edit">Project</button></p>
}
@if (user.GetType().Name == "Projector")
{
    <p><label>Name Director:</label></p>
    <p><input type="text" @bind-value=nameDirector /></p>
    <p><label>Name Organization:</label></p>
    <p><input type="text" bind-value="NameOrg" @bind-value=NameOrg /></p>
    <p><label>INN:</label></p>
    <p><input type="text" maxlength="12" @bind-value=INN/></p>
    <p><label>KPP:</label></p>
    <p><input type="text" maxlength="12" @bind-value=KPP /></p>
    <p><label>OGNR:</label></p>
    <p><input type="text" maxlength="12" @bind-value=OGNR /></p>
    <p><label>Main Engineet:</label></p>
    <p><label>Adress:</label></p>
    <p><input type="text" @bind-value=Address /></p>
    <p><input type="text" @bind-value=Engineer /></p>
    <p><button type="button" @onclick="Projecting">Project</button></p>
}
<p><button type="button" @onclick="Change">Change</button> <button type="button" @onclick="SignOut">SignOut</button></p>
@if(Error)
{
    <p><label style="color: red;font-weight: 500;">Заполните поля!!!</label></p>
}
@code {
    public string? INN;
    public string? KPP;
    public string? OGNR;
    public string? FullName;
    public string? Name;
    public string? Login;
    public string? Password;
    public string? NameOrg;
    public string? Engineer;
    public string? Departament;
    public string? Phone;
    public string? Email;
    public string? Address;
    public string? nameDirector;
    bool ErrorEmail;
    bool ErrorInputLogin;
    bool Error;

    public User user;
    protected override void OnInitialized()
    {
        user = ser.GetUser();
        Name = user.Name;
        Login = user.Login;
        Password = user.Password;
        Phone = user.Phone;
        Email = user.Email;
        if (user.GetType().Name == "Developer")
        {
            INN = (user as Developer).INN;
            KPP = (user as Developer).KPP;
            OGNR = (user as Developer).OGNR;
            Address = (user as Developer).Address;
        }
        if (user.GetType().Name == "Projector")
        {
            INN = (user as Projector).INN;
            KPP = (user as Projector).KPP;
            OGNR = (user as Projector).OGNR;
            Engineer = (user as Projector).Engineer;
            nameDirector = (user as Projector).nameDirector;
            NameOrg = (user as Projector).NameOrg;
            Address = (user as Projector).Address;
        }
        if(user.GetType().Name == "Desingner")
        {
            FullName = (user as Desingner).FullName;
            Departament = (user as Desingner).Department;
        }
    }
    public  void Change()
    {
        var users = Mongich.FindAll();
        if (Name != null && Password != null && Phone != null && Email != null && Login != null)
        {
            
            foreach (var user in users)
            {
                if (Login == user.Login)
                {
                    ErrorInputLogin = true;
                    return;
                }
                else
                {
                    ErrorInputLogin = false;
                    if (Email == user.Email)
                    {
                        ErrorEmail = true;
                        return;
                    }
                    else
                    {
                        ErrorEmail = false;
                    }
                }
            }

            switch (user.GetType().Name)

            {
                case "Developer":

                    user = new Developer()
                        {
                            Name = Name,
                            Login = Login,
                            Phone = Phone,
                            Email = Email,
                            Password = Password,
                            INN = INN,
                            OGNR = OGNR,
                            KPP = KPP,
                            Address = Address,
                        };
                    Mongich.ReplaceByName(user, Login);
                    break;
                case "Desingner":

                    user = new Desingner()
                        {
                            Name = Name,
                            Login = Login,
                            Phone = Phone,
                            Email = Email,
                            Password = Password,
                            FullName = (user as Desingner).FullName,
                            Department = (user as Desingner).Department,
                        };
                    Mongich.ReplaceByName(user, Login);
                    break;
                case "Projector":

                    user = new Projector()
                        {
                            Name = Name,
                            Login = Login,
                            Phone = Phone,
                            Email = Email,
                            Password = Password,
                            INN = (user as Projector).INN,
                            OGNR = (user as Projector).OGNR,
                            KPP = (user as Projector).KPP,
                            Engineer = (user as Projector).Engineer,
                            NameOrg = (user as Projector).NameOrg,
                            nameDirector = (user as Projector).nameDirector,
                        };
                    Mongich.ReplaceByName(user, Login);
                    break;
            }

        }
        else
        {
            Error = true;
            return;
        }

    }
    void SignOut()
    {
        nav.NavigateTo("/autorization");
    }
    void Projecting()
    {
        nav.NavigateTo("/file");
    }
    void Edit()
    {
        nav.NavigateTo("/projectDesingner");
    }
}
